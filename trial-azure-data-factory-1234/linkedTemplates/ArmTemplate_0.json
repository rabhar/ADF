{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "trial-azure-data-factory-1234"
		},
		"ADLSgen2triallinked_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ADLSgen2triallinked'"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"AzureDataLakeStorage1_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage1'"
		},
		"AzureSqlDatabase_watermark_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase_watermark'"
		},
		"adlsg2_AzureDataLakeStorage_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'adlsg2_AzureDataLakeStorage'"
		},
		"adlsg2_target_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'adlsg2_target'"
		},
		"adlsg2trial_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'adlsg2trial'"
		},
		"new_linked_service_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'new_linked_service'"
		},
		"ADLSgen2triallinked_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adlsg2trial.dfs.core.windows.net/"
		},
		"AzureDataLakeStorage1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://rabharstorageaccount4567.dfs.core.windows.net/"
		},
		"adlsg2_AzureDataLakeStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://rabharstorageaccount4567.dfs.core.windows.net/"
		},
		"adlsg2_target_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://rabharstorageaccount4567.dfs.core.windows.net/"
		},
		"adlsg2trial_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adlsg2trial.dfs.core.windows.net/"
		},
		"adf_tutorial_trigger_properties_pipeline_parameters_input_folder_param": {
			"type": "string",
			"defaultValue": "input"
		},
		"storage_trigger_properties_ADF_dataflow_tutorial_parameters_pipeline_input_path": {
			"type": "string",
			"defaultValue": "output"
		},
		"storage_trigger_properties_ADF_dataflow_tutorial_parameters_pipeline_output_path": {
			"type": "string",
			"defaultValue": "staging"
		},
		"storage_trigger_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/0fc809d6-112c-4e15-9a1a-500d19014d8b/resourceGroups/trial/providers/Microsoft.Storage/storageAccounts/adlsg2trial"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ADLSgen2triallinked')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ADLSgen2triallinked_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ADLSgen2triallinked_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage1_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase_watermark')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase_watermark_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/adlsg2_AzureDataLakeStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('adlsg2_AzureDataLakeStorage_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('adlsg2_AzureDataLakeStorage_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/adlsg2_target')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('adlsg2_target_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('adlsg2_target_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/adlsg2trial')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('adlsg2trial_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('adlsg2trial_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/new_linked_service')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('new_linked_service_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/adlsg2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adlsg2trial",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folder_param": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().folder_param",
							"type": "Expression"
						},
						"fileSystem": "adlsg2"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adlsg2trial')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/adlsg2_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adlsg2trial",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"input_folder": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().input_folder",
							"type": "Expression"
						},
						"fileSystem": "adlsg2"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "lat",
						"type": "String"
					},
					{
						"name": "long",
						"type": "String"
					},
					{
						"name": "city_district",
						"type": "String"
					},
					{
						"name": "town",
						"type": "String"
					},
					{
						"name": "country",
						"type": "String"
					},
					{
						"name": "state",
						"type": "String"
					},
					{
						"name": "region",
						"type": "String"
					},
					{
						"name": "postcode",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adlsg2trial')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/adlsg2_input_folder_file')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adlsg2trial",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folder_path": {
						"type": "string"
					},
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folder_path",
							"type": "Expression"
						},
						"fileSystem": "adlsg2"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adlsg2trial')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/adlsg2_json_output')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adlsg2trial",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"output_path": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().output_path",
							"type": "Expression"
						},
						"fileSystem": "adlsg2"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adlsg2trial')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADF_tutorial')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get files",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "adlsg2",
								"type": "DatasetReference",
								"parameters": {
									"folder_param": {
										"value": "@pipeline().parameters.input_folder_param",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "ForEachFiles",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get files').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Is csv file",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Set variable1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@endswith(item().name, '.csv')",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Copy data1",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "BinarySource",
														"storeSettings": {
															"type": "AzureBlobFSReadSettings",
															"recursive": true
														},
														"formatSettings": {
															"type": "BinaryReadSettings"
														}
													},
													"sink": {
														"type": "BinarySink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "adlsg2_input_folder_file",
														"type": "DatasetReference",
														"parameters": {
															"folder_path": {
																"value": "@pipeline().parameters.input_folder_param",
																"type": "Expression"
															},
															"filename": {
																"value": "@variables('filename')",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "adlsg2",
														"type": "DatasetReference",
														"parameters": {
															"folder_param": "output"
														}
													}
												]
											}
										]
									}
								},
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "filename",
										"value": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"input_folder_param": {
						"type": "string"
					}
				},
				"variables": {
					"filename": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/adlsg2')]",
				"[concat(variables('factoryId'), '/datasets/adlsg2_input_folder_file')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_tutorial')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "adlsg2_csv",
								"type": "DatasetReference"
							},
							"name": "citycsv"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "adlsg2_json_output",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "countryFilter"
						},
						{
							"name": "joinwitgetcount"
						},
						{
							"name": "select1"
						},
						{
							"name": "getCount"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "sort1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     folder_path as string",
						"}",
						"source(output(",
						"          lat as string,",
						"          long as string,",
						"          city_district as string,",
						"          town as string,",
						"          country as string,",
						"          state as string,",
						"          region as string,",
						"          postcode as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     moveFiles: [($folder_path),'success']) ~> citycsv",
						"citycsv filter(country==\"France\") ~> countryFilter",
						"citycsv, getCount join(citycsv@town == getCount@town,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> joinwitgetcount",
						"joinwitgetcount select(mapColumn(",
						"          lat,",
						"          long,",
						"          city_district,",
						"          town = citycsv@town,",
						"          country,",
						"          state,",
						"          region,",
						"          postcode",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"derivedColumn1 aggregate(groupBy(town),",
						"     town_count = count(town)) ~> getCount",
						"countryFilter derive(town_count = 0) ~> derivedColumn1",
						"select1 sort(asc(town, true)) ~> sort1",
						"sort1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/adlsg2_csv')]",
				"[concat(variables('factoryId'), '/datasets/adlsg2_json_output')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADF_dataflow_tutorial')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dataflow_tutorial",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow_tutorial",
								"type": "DataFlowReference",
								"parameters": {
									"folder_path": {
										"value": "'@{pipeline().parameters.pipeline_input_path}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"citycsv": {
										"input_folder": {
											"value": "@pipeline().parameters.pipeline_input_path",
											"type": "Expression"
										}
									},
									"sink1": {
										"output_path": {
											"value": "@pipeline().parameters.pipeline_output_path",
											"type": "Expression"
										}
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pipeline_input_path": {
						"type": "string"
					},
					"pipeline_output_path": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow_tutorial')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/adf_tutorial_trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "ADF_tutorial",
						"type": "PipelineReference"
					},
					"parameters": {
						"input_folder_param": "[parameters('adf_tutorial_trigger_properties_pipeline_parameters_input_folder_param')]"
					}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Minute",
					"interval": 5,
					"startTime": "2023-06-19T21:11:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 1,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ADF_tutorial')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/storage_trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "ADF_dataflow_tutorial",
							"type": "PipelineReference"
						},
						"parameters": {
							"pipeline_input_path": "[parameters('storage_trigger_properties_ADF_dataflow_tutorial_parameters_pipeline_input_path')]",
							"pipeline_output_path": "[parameters('storage_trigger_properties_ADF_dataflow_tutorial_parameters_pipeline_output_path')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/adlsg2/blobs/output/",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('storage_trigger_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ADF_dataflow_tutorial')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Minute",
					"interval": 5,
					"startTime": "2023-06-19T21:14:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 1,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": [
						{
							"type": "TumblingWindowTriggerDependencyReference",
							"offset": "-0.00:03:00",
							"referenceTrigger": {
								"referenceName": "adf_tutorial_trigger",
								"type": "TriggerReference"
							}
						}
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/triggers/adf_tutorial_trigger')]"
			]
		}
	]
}